var documenterSearchIndex = {"docs":
[{"location":"1.2.10_algorithm_analysis/#.2.10-Algorithm-analysis","page":"1.2.10 Alg Analysis","title":"1.2.10 Algorithm analysis","text":"","category":"section"},{"location":"1.2.10_algorithm_analysis/","page":"1.2.10 Alg Analysis","title":"1.2.10 Alg Analysis","text":"Note the use of Chebychevs inequality (p 98):","category":"page"},{"location":"1.2.10_algorithm_analysis/","page":"1.2.10 Alg Analysis","title":"1.2.10 Alg Analysis","text":"Given a distribution A with mean µ and standard deviation σ, Then the probability of being r times the the standard deviation away from the mean is less than 1/r²:","category":"page"},{"location":"1.2.10_algorithm_analysis/","page":"1.2.10 Alg Analysis","title":"1.2.10 Alg Analysis","text":"$","category":"page"},{"location":"1.2.10_algorithm_analysis/","page":"1.2.10 Alg Analysis","title":"1.2.10 Alg Analysis","text":"P(|A - µ| > rσ) < 1/r² $","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TheArtOfComputerProgramming","category":"page"},{"location":"#The-Art-Of-Computer-Programming","page":"Home","title":"The Art Of Computer Programming","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"These are my notes from reading Knuth: The art of Computer programming.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TheArtOfComputerProgramming]","category":"page"},{"location":"1.1_euclid/#Chapter-1.1:-Euclids-algorithm","page":"1.1: Euclid alg","title":"Chapter 1.1: Euclids algorithm","text":"","category":"section"},{"location":"1.1_euclid/#Algorithm-E:-Euclids-algorithm-for-finding-gcd(m,n)","page":"1.1: Euclid alg","title":"Algorithm E: Euclids algorithm for finding gcd(m,n)","text":"","category":"section"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"Input: m, n positive integers.","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"E1 [ find remainder ] r = m % n\nE2 [ is remainder zero ] r == 0 && return(n)\nE3  Reduce  = (n,r) . Goto E1","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"Let's implement in Julia:","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"function E(m,n)\n    while (r = m % n) != 0\n        (m,n) = (n,r)\n    end\n    n\nend\n","category":"page"},{"location":"1.1_euclid/#Analysis","page":"1.1: Euclid alg","title":"Analysis","text":"","category":"section"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"Knuth's goes a bit into the analysis be looking at the average number of iterations neded for a given n.","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"T_n","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":": = average over all integers m > 0 of time sstep E1 of the algorithm E is performed. [p 7]","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"He argues that we only need to check m = n, so we get the following implementation:","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"function T(n0)\n    i=0\n    for m in 1:n0\n        n = n0\n        while (r = m % n) != 0\n            (m,n) = (n,r)\n            i = i + 1\n        end\n        @debug m, n, i\n    end\n    i/n0\nend","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"He claims that asymptotically, this is 12log(2)pi^2 log(n). we can check this by plotting.","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"using Plots\nf(n) = 12log(2)/pi^2*log(n)\nn = 1000; plot([T.(1:n) f.(1:n)], label=[\"T(n)\" \"12log(2)/pi^2log(n)\"], title=\"Average number of iterations of gcd\")","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"(Image: gcd iterations)","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"We can also estimate it by fitting a log curve to the simulation and plot the difference between the estimated coefficient and the stated one:","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"using LsqFit, Plots\n\nmodel(x,p) = p[1]*log.(x)\np0 = [1.]\nn = 500; f1 = curve_fit(model, 1.:n, T.(1.:n), p0)\ncoef(f1)[1]*pi^2/log(2)-12\n\nfunction residual(n)\n    model(x,p) = p[1]*log.(x)\n    p0 = [1.]\n    f1 = curve_fit(model, 1.:n, T.(1.:n), p0)\n    coef(f1)[1] - 12log(2)/pi^2\nend\n\nplot(100:100:1000,residual.(100:100:1000), ylims=[residual(100)*1.1,0], label=\"residual\", title=\"Coefficient -  12log(2)/pi^2\")\n","category":"page"},{"location":"1.1_euclid/","page":"1.1: Euclid alg","title":"1.1: Euclid alg","text":"(Image: model convergence)","category":"page"}]
}
